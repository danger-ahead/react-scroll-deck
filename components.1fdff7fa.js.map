{"mappings":"A,I,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,C,E,Q,C,Q,S,C,C,C,E,O,c,C,E,O,C,U,C,I,I,E,I,K,E,W,C,E,a,C,C,GCKC,IAAA,EAAA,EAAA,S,E,E,SAOc,SAAA,EAAmB,CAAA,SAChC,CAAQ,CAAA,gBACR,EAAkB,CAAA,CAAA,CAAA,sBAClB,EAAwB,MAAA,CAAA,kBACxB,EAAoB,GAAA,CAAA,oBACpB,EAAsB,QAAA,CAAA,uBACtB,EAAyB,GAAA,CAAA,+BACzB,EAAiC,GAAA,CAAA,uBACjC,EAAyB,GAAA,CAAA,+BACzB,EAAiC,GAAA,CAAA,UACjC,EAAY,MAAA,CAAA,OACZ,EAAS,MAAA,CAAA,cACT,EAAgB,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAA,EAAA,QAAA,CAAA,CAAA,EAAA,CAAA,eAChB,EAAiB,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAA,EAAA,QAAA,CAAA,CAAA,EAAA,CAAA,+BACjB,EAAiC,CAAA,CAAA,CAAA,2BACjC,EAA6B,GAAA,CACZ,EACjB,GAAM,CAAC,EAAc,EAAgB,CAAG,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,EAAkB,CAAA,GAEpD,EAAe,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAgB,CAAA,GAE/B,EAAwB,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAuB,MAE/C,CAAC,EAAsB,EAAwB,CACnD,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,EAA8B,CAAC,GAE3B,CAAC,EAAc,EAAgB,CAAG,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,EAAS,CAAA,GAwBjD,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,EAAU,KACR,IAAM,EAAY,EAAsB,OAAxC,CACM,EAAe,KACnB,EAAa,OAAA,CACX,EAAU,UAAA,CAAa,EAAU,WAAA,GAAgB,EAAU,WAD7D,AAEF,EAOA,OALA,EAAU,gBAAA,CAAiB,SAAU,GACrC,OAAO,gBAAA,CAAiB,SAAU,GAElC,IAEO,KACL,OAAO,mBAAA,CAAoB,SAAU,GACrC,EAAU,mBAAA,CAAoB,SAAU,EAC1C,CACF,EAAG,EAAE,EAEL,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,EAAU,KACJ,CAAC,GAAgB,EAAa,OAAA,EAChC,EAAsB,OAAA,EAAS,SAAS,CACtC,KAAM,GACR,EAEJ,EAAG,CAAC,EAAa,EAEjB,IAAM,EAAe,KAEjB,GACA,OAAO,UAAA,EAAc,GAErB,EAAwB,CACtB,cAAe,SACf,SAAU,QACZ,GACA,EAAgB,CAAA,KAEhB,EAAwB,CAAC,GACzB,EAAgB,CAAA,GAEpB,EAEA,MACE,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,MADH,CAEI,aA9DJ,WACE,EAAgB,CAAA,EAClB,EA6DI,aAnEJ,WACE,EAAgB,CAAA,EAClB,EAkEI,MAAO,CACL,QAAS,EACL,CAAC,EAAE,EAA+B,CAAC,CACnC,CAAC,EAAE,EAAuB,CAAC,AACjC,EACA,UAAU,+B,S,CAET,GAAmB,GAAgB,CAAC,EACnC,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,MADF,CAEG,MAAO,CACL,MAAO,CACT,EACA,UAAU,gCAEV,SAAA,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,SAAD,CAAQ,QA1EhB,WACE,EAAsB,OAAA,EAAS,SAAS,CACtC,KAAM,CAAC,EACP,SAAU,CACZ,EACF,EAqEgD,SAAA,C,EAExC,GAAA,KACJ,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,MAAD,CACE,IAAK,EACL,UAAU,+BACV,MAAO,CACL,GAAG,CAAoB,CACvB,UAAW,EACX,OAAQ,EACR,QAAS,EACL,CAAC,EAAE,EAA+B,CAAC,CACnC,CAAC,EAAE,EAAuB,CAAC,AACjC,EAEC,SAAA,C,GAEF,GAAmB,GAAgB,CAAC,EACnC,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,MADF,CAEG,MAAO,CACL,MAAO,EACP,MAAO,CACT,EACA,UAAU,gCAEV,SAAA,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,SAAD,CAAQ,QA5FhB,WACE,EAAsB,OAAA,EAAS,SAAS,CACtC,KAAM,EACN,SAAU,CACZ,EACF,EAuFiD,SAAA,C,EAEzC,GAAA,K,A,EAGV,C","sources":["<anon>","src/components/index.tsx"],"sourcesContent":["function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar parcelRequire = $parcel$global[\"parcelRequireff53\"];\nparcelRequire.register(\"bRT7J\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $a0b5df95b1071520$export$2e2bcd8739ae039);\n/**\n * @module ReactScrollDeck\n * @description A component that displays a sliding UI . On clicking hover-based button, items slide to the left or right.\n * @returns {JSX.Element}\n * @author danger-ahead\n */ \nvar $ayMG0 = parcelRequire(\"ayMG0\");\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nfunction $a0b5df95b1071520$export$2e2bcd8739ae039({ children: children, showAHoverIcons: showAHoverIcons = true, hoverIconSectionWidth: hoverIconSectionWidth = \"3rem\", arrowScrollAmount: arrowScrollAmount = 500, arrowScrollBehavior: arrowScrollBehavior = \"smooth\", scrollContainerPadding: scrollContainerPadding = \"0\", scrollContainerPaddingOnScroll: scrollContainerPaddingOnScroll = \"0\", parentContainerPadding: parentContainerPadding = \"0\", parentContainerPaddingOnScroll: parentContainerPaddingOnScroll = \"0\", columnGap: columnGap = \"0rem\", rowGap: rowGap = \"0rem\", leftHoverIcon: leftHoverIcon = /*#__PURE__*/ (0, $ayMG0.jsx)((0, $ayMG0.Fragment), {}), rightHoverIcon: rightHoverIcon = /*#__PURE__*/ (0, $ayMG0.jsx)((0, $ayMG0.Fragment), {}), differentLayoutFormobileDevice: differentLayoutFormobileDevice = false, mobileDeviceBreakpointInPx: mobileDeviceBreakpointInPx = 640 }) {\n    const [hoverButtons, setHoverButtons] = (0, $acw62.useState)(false);\n    const isEndReached = (0, $acw62.useRef)(false);\n    const slidingCardsContainer = (0, $acw62.useRef)(null);\n    const [scrollContainerStyle, setScrollContainerStyle] = (0, $acw62.useState)({});\n    const [mobileDevice, setMobileDevice] = (0, $acw62.useState)(false);\n    function onMouseEnter() {\n        setHoverButtons(true);\n    }\n    function onMouseLeave() {\n        setHoverButtons(false);\n    }\n    function handleArrowClickLeft() {\n        slidingCardsContainer.current?.scrollBy({\n            left: -arrowScrollAmount,\n            behavior: arrowScrollBehavior\n        });\n    }\n    function handleArrowClickRight() {\n        slidingCardsContainer.current?.scrollBy({\n            left: arrowScrollAmount,\n            behavior: arrowScrollBehavior\n        });\n    }\n    (0, $acw62.useEffect)(()=>{\n        const container = slidingCardsContainer.current;\n        const handleScroll = ()=>{\n            isEndReached.current = container.scrollLeft + container.clientWidth === container.scrollWidth;\n        };\n        container.addEventListener(\"scroll\", handleScroll);\n        window.addEventListener(\"resize\", handleResize);\n        handleResize();\n        return ()=>{\n            window.removeEventListener(\"resize\", handleResize);\n            container.removeEventListener(\"scroll\", handleScroll);\n        };\n    }, []);\n    (0, $acw62.useEffect)(()=>{\n        if (!hoverButtons && isEndReached.current) slidingCardsContainer.current?.scrollBy({\n            left: 9000000\n        });\n    }, [\n        hoverButtons\n    ]);\n    const handleResize = ()=>{\n        if (differentLayoutFormobileDevice && window.innerWidth <= mobileDeviceBreakpointInPx) {\n            setScrollContainerStyle({\n                flexDirection: \"column\",\n                flexWrap: \"nowrap\"\n            });\n            setMobileDevice(true);\n        } else {\n            setScrollContainerStyle({});\n            setMobileDevice(false);\n        }\n    };\n    return /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n        onMouseLeave: onMouseLeave,\n        onMouseEnter: onMouseEnter,\n        style: {\n            padding: hoverButtons ? `${parentContainerPaddingOnScroll}` : `${parentContainerPadding}`\n        },\n        className: \"react_scroll_deck__component\",\n        children: [\n            showAHoverIcons && hoverButtons && !mobileDevice ? /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                style: {\n                    width: hoverIconSectionWidth\n                },\n                className: \"react_scroll_deck__hover_btns\",\n                children: /*#__PURE__*/ (0, $ayMG0.jsx)(\"button\", {\n                    onClick: handleArrowClickLeft,\n                    children: leftHoverIcon\n                })\n            }) : null,\n            /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                ref: slidingCardsContainer,\n                className: \"react_scroll_deck__container\",\n                style: {\n                    ...scrollContainerStyle,\n                    columnGap: columnGap,\n                    rowGap: rowGap,\n                    padding: hoverButtons ? `${scrollContainerPaddingOnScroll}` : `${scrollContainerPadding}`\n                },\n                children: children\n            }),\n            showAHoverIcons && hoverButtons && !mobileDevice ? /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                style: {\n                    right: 0,\n                    width: hoverIconSectionWidth\n                },\n                className: \"react_scroll_deck__hover_btns\",\n                children: /*#__PURE__*/ (0, $ayMG0.jsx)(\"button\", {\n                    onClick: handleArrowClickRight,\n                    children: rightHoverIcon\n                })\n            }) : null\n        ]\n    });\n}\n\n});\n\n\n//# sourceMappingURL=components.1fdff7fa.js.map\n","/**\n * @module ReactScrollDeck\n * @description A component that displays a sliding UI . On clicking hover-based button, items slide to the left or right.\n * @returns {JSX.Element}\n * @author danger-ahead\n */\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { ScrollDecksProps } from \"./types\";\n\nimport \"../styles/styles.css\";\n\nexport default function Component({\n  children,\n  showAHoverIcons = true,\n  hoverIconSectionWidth = \"3rem\",\n  arrowScrollAmount = 500,\n  arrowScrollBehavior = \"smooth\",\n  scrollContainerPadding = \"0\",\n  scrollContainerPaddingOnScroll = \"0\",\n  parentContainerPadding = \"0\",\n  parentContainerPaddingOnScroll = \"0\",\n  columnGap = \"0rem\",\n  rowGap = \"0rem\",\n  leftHoverIcon = <></>,\n  rightHoverIcon = <></>,\n  differentLayoutFormobileDevice = false,\n  mobileDeviceBreakpointInPx = 640,\n}: ScrollDecksProps) {\n  const [hoverButtons, setHoverButtons] = useState<boolean>(false);\n\n  const isEndReached = useRef<boolean>(false);\n\n  const slidingCardsContainer = useRef<HTMLDivElement>(null);\n\n  const [scrollContainerStyle, setScrollContainerStyle] =\n    useState<React.CSSProperties>({});\n\n  const [mobileDevice, setMobileDevice] = useState(false);\n\n  function onMouseEnter() {\n    setHoverButtons(true);\n  }\n\n  function onMouseLeave() {\n    setHoverButtons(false);\n  }\n\n  function handleArrowClickLeft() {\n    slidingCardsContainer.current?.scrollBy({\n      left: -arrowScrollAmount!,\n      behavior: arrowScrollBehavior,\n    });\n  }\n\n  function handleArrowClickRight() {\n    slidingCardsContainer.current?.scrollBy({\n      left: arrowScrollAmount,\n      behavior: arrowScrollBehavior,\n    });\n  }\n\n  useEffect(() => {\n    const container = slidingCardsContainer.current!;\n    const handleScroll = () => {\n      isEndReached.current =\n        container.scrollLeft + container.clientWidth === container.scrollWidth;\n    };\n\n    container.addEventListener(\"scroll\", handleScroll);\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      container.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!hoverButtons && isEndReached.current) {\n      slidingCardsContainer.current?.scrollBy({\n        left: 9000000,\n      });\n    }\n  }, [hoverButtons]);\n\n  const handleResize = () => {\n    if (\n      differentLayoutFormobileDevice &&\n      window.innerWidth <= mobileDeviceBreakpointInPx\n    ) {\n      setScrollContainerStyle({\n        flexDirection: \"column\",\n        flexWrap: \"nowrap\",\n      });\n      setMobileDevice(true);\n    } else {\n      setScrollContainerStyle({});\n      setMobileDevice(false);\n    }\n  };\n\n  return (\n    <div\n      onMouseLeave={onMouseLeave}\n      onMouseEnter={onMouseEnter}\n      style={{\n        padding: hoverButtons\n          ? `${parentContainerPaddingOnScroll}`\n          : `${parentContainerPadding}`,\n      }}\n      className=\"react_scroll_deck__component\"\n    >\n      {showAHoverIcons && hoverButtons && !mobileDevice ? (\n        <div\n          style={{\n            width: hoverIconSectionWidth,\n          }}\n          className=\"react_scroll_deck__hover_btns\"\n        >\n          <button onClick={handleArrowClickLeft}>{leftHoverIcon}</button>\n        </div>\n      ) : null}\n      <div\n        ref={slidingCardsContainer}\n        className=\"react_scroll_deck__container\"\n        style={{\n          ...scrollContainerStyle,\n          columnGap: columnGap,\n          rowGap: rowGap,\n          padding: hoverButtons\n            ? `${scrollContainerPaddingOnScroll}`\n            : `${scrollContainerPadding}`,\n        }}\n      >\n        {children}\n      </div>\n      {showAHoverIcons && hoverButtons && !mobileDevice ? (\n        <div\n          style={{\n            right: 0,\n            width: hoverIconSectionWidth,\n          }}\n          className=\"react_scroll_deck__hover_btns\"\n        >\n          <button onClick={handleArrowClickRight}>{rightHoverIcon}</button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n"],"names":["parcelRequire","$parcel$global","globalThis","self","window","global","register","module","exports","Object","defineProperty","get","$a0b5df95b1071520$export$2e2bcd8739ae039","set","s","enumerable","configurable","$ayMG0","$acw62","children","showAHoverIcons","hoverIconSectionWidth","arrowScrollAmount","arrowScrollBehavior","scrollContainerPadding","scrollContainerPaddingOnScroll","parentContainerPadding","parentContainerPaddingOnScroll","columnGap","rowGap","leftHoverIcon","jsx","Fragment","rightHoverIcon","differentLayoutFormobileDevice","mobileDeviceBreakpointInPx","hoverButtons","setHoverButtons","useState","isEndReached","useRef","slidingCardsContainer","scrollContainerStyle","setScrollContainerStyle","mobileDevice","setMobileDevice","useEffect","container","current","handleScroll","scrollLeft","clientWidth","scrollWidth","addEventListener","handleResize","removeEventListener","scrollBy","left","innerWidth","flexDirection","flexWrap","jsxs","onMouseLeave","onMouseEnter","style","padding","className","width","onClick","behavior","ref","right"],"version":3,"file":"components.1fdff7fa.js.map"}